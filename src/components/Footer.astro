---
interface props {
	title: string
}

const { title } = Astro.props
import { Sun, Moon } from "lucide-react"
import Icon from "@/components/Icon.astro"
---

<section class="border-t border-solid border-muted p-4">
	<div class="flex justify-between">
		<div class="flex flex-row gap-4">
			<b>REALIZADO POR JAVIER GARC√çA</b>
			<Icon href="https://github.com/javigar322" nameI="SiGithub" />
			<Icon href="https://twitter.com/xavigar322" nameI="SiTwitter" />
		</div>
		<div class="flex flex-row gap-4">
			<button
				id="themeToggle"
				class="inline-flex text-primary transition hover:scale-125 hover:opacity-70"
			>
				<i class="opacity-100 transition-transform dark:-rotate-90 dark:opacity-0">
					<Sun />
				</i>

				<i class="absolute rotate-90 opacity-0 transition-transform dark:rotate-0 dark:opacity-100">
					<Moon />
				</i>

				<span class="sr-only">Alternar tema</span>
			</button>
		</div>
	</div>
</section>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme")
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"
	}
	const isDark = getThemePreference() === "dark"
	document.documentElement.classList[isDark ? "add" : "remove"]("dark")

	const handleToggleClick = () => {
		const element = document.documentElement
		element.classList.toggle("dark")

		const isDark = element.classList.contains("dark")
		localStorage.setItem("theme", isDark ? "dark" : "light")
	}

	document.getElementById("themeToggle").addEventListener("click", handleToggleClick)
</script>
